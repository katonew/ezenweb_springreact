# 주석
# application.properties 스프링 프로젝트의 설정 파일

# 스프링부트는 내장톰캣( 기본값 존재 : 내장톰캣 포트 8080 )
# JSP(이클립스) 서버 동시 실행시 충돌 주의
server.port = 8080

# Spring data 스프링이 DB 연결를  관리
# 1. mysql 드라이버
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
# 2. DB URL
spring.datasource.url=jdbc:mysql://localhost:3306/springweb
# 3. DB 계정 ID
spring.datasource.username=root
# 4. DB 계정 PASSWORD *띄어쓰기도 포함
spring.datasource.password=1234

# JPA 관련 설정
# 5. JPA 실행시 자동으로 create [ DROP -> CREATE  ]
# spring.jpa.hibernate.ddl-auto = create
# 6. JPA 실행시 자동으로 update [ 존재하면 SQL 존재하지 않는 CREATE  ]
spring.jpa.hibernate.ddl-auto = update
# 7. JPA  가  자동으로 작성한 SQL를 console 출력해주는 명령어
spring.jpa.properties.hibernate.show_sql = true
spring.jpa.properties.hibernate.format_sql = true


# 로깅 설정
# 1. 기록할 최소 레벨 선택 [ info 이상 레벨만 기록 ]
logging.level.root = info
# 2. 기록할 파일 경로 [ 경로/파일명.log ]
logging.file.name=c:/java/spring.log

# Oauth2 관련된 설정값

# 1. 구글 클라우드 플랫폼에서 신청한 oauth2 클라이언트 정보
    # 1. 발급 된 구글 클라이언트 id 대입
spring.security.oauth2.client.registration.google.client-id=968931191881-vfbn4o21bg62q3k5njp8v8g0lvsd7ac9.apps.googleusercontent.com
    # 2. 발급된 구글 클라이언트 pw 대입
spring.security.oauth2.client.registration.google.client-secret=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
    # 3. 신청해서 요청한 동의항목 [ 요청할 회원 정보들 ] : 동의 항목 내 명시 된 변수 / 필드명 작성
spring.security.oauth2.client.registration.google.scope=email,profile